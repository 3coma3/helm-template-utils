# toenv_test.yaml
suite: toEnv Tests
templates:
  - toenv.yaml
tests:
  - it: sanity check
    asserts:
      - exists:
          path: envs

  - it: simple-value should include an unnamed env var
    asserts:
      - equal:
          path: envs.simple-value
          value:
            - name: _
              value: "simpleValue"

  - it: simple-value-name-implicit should include EnVar SIMPLE_VALUE
    asserts:
      - equal:
          path: envs.simple-value-name-implicit
          value:
            - name: SIMPLE_VALUE
              value: "simpleValue"

  - it: simple-value-name-explicit should include EnVar CUSTOM_PREFIX
    asserts:
      - equal:
          path: envs.simple-value-name-explicit
          value:
            - name: CUSTOM_PREFIX
              value: "simpleValue"

  - it: simple-map should include all keys and values from .Values.simpleMap
    asserts:
      - equal:
          path: envs.simple-map
          value:
            - name: BOOL_VALUE
              value: "false"
            - name: LOG_LEVEL
              value: "debug"
            - name: NUMBER_VALUE
              value: "42"
            - name: REPLICAS
              value: "3"
            - name: STRING_VALUE
              value: "hello"
            - name: USE_CACHE
              value: "true"

  - it: simple-map-name-implicit should prefix all keys from .Values.simpleMap with SIMPLE_MAP
    asserts:
      - equal:
          path: envs.simple-map-name-implicit
          value:
            - name: SIMPLE_MAP_BOOL_VALUE
              value: "false"
            - name: SIMPLE_MAP_LOG_LEVEL
              value: "debug"
            - name: SIMPLE_MAP_NUMBER_VALUE
              value: "42"
            - name: SIMPLE_MAP_REPLICAS
              value: "3"
            - name: SIMPLE_MAP_STRING_VALUE
              value: "hello"
            - name: SIMPLE_MAP_USE_CACHE
              value: "true"

  - it: simple-map-name-explicit should prefix all keys from .Values.simpleMap with CUSTOM_PREFIX
    asserts:
      - equal:
          path: envs.simple-map-name-explicit
          value:
            - name: CUSTOM_PREFIX_BOOL_VALUE
              value: "false"
            - name: CUSTOM_PREFIX_LOG_LEVEL
              value: "debug"
            - name: CUSTOM_PREFIX_NUMBER_VALUE
              value: "42"
            - name: CUSTOM_PREFIX_REPLICAS
              value: "3"
            - name: CUSTOM_PREFIX_STRING_VALUE
              value: "hello"
            - name: CUSTOM_PREFIX_USE_CACHE
              value: "true"

  - it: simple-list should include all keys and values from .Values.simpleList
    asserts:
      - equal:
          path: envs.simple-list
          value:
            - name: STRING_VALUE
              value: "hello"
            - name: BOOL_VALUE
              value: "false"
            - name: NUMBER_VALUE
              value: "42"
            - name: LOG_LEVEL
              value: "debug"
            - name: REPLICAS
              value: "3"
            - name: USE_CACHE
              value: "true"

  - it: simple-list-name-implicit should prefix all keys from .Values.simpleList with SIMPLE_LIST
    asserts:
      - equal:
          path: envs.simple-list-name-implicit
          value:
            - name: SIMPLE_LIST_STRING_VALUE
              value: "hello"
            - name: SIMPLE_LIST_BOOL_VALUE
              value: "false"
            - name: SIMPLE_LIST_NUMBER_VALUE
              value: "42"
            - name: SIMPLE_LIST_LOG_LEVEL
              value: "debug"
            - name: SIMPLE_LIST_REPLICAS
              value: "3"
            - name: SIMPLE_LIST_USE_CACHE
              value: "true"

  - it: simple-list-name-explicit should prefix all keys from .Values.simpleList with CUSTOM_PREFIX
    asserts:
      - equal:
          path: envs.simple-list-name-explicit
          value:
            - name: CUSTOM_PREFIX_BOOL_VALUE
              value: "false"
            - name: CUSTOM_PREFIX_LOG_LEVEL
              value: "debug"
            - name: CUSTOM_PREFIX_NUMBER_VALUE
              value: "42"
            - name: CUSTOM_PREFIX_REPLICAS
              value: "3"
            - name: CUSTOM_PREFIX_STRING_VALUE
              value: "hello"
            - name: CUSTOM_PREFIX_USE_CACHE
              value: "true"

  - it: simple-valuefrom should include an unnamed valueFrom map
    asserts:
      - equal:
          path: envs.simple-valuefrom
          value:
            - name: _
              valueFrom:
                secretKeyRef:
                  key: simpleValueFromKey
                  name: simpleValueFromName
                  optional: false

  - it: simple-valuefrom-name-implicit should include a SIMPLE_VALUE_FROM valueFrom map
    asserts:
      - equal:
          path: envs.simple-valuefrom-name-implicit
          value:
            - name: SIMPLE_VALUE_FROM
              valueFrom:
                secretKeyRef:
                  key: simpleValueFromKey
                  name: simpleValueFromName
                  optional: false

  - it: simple-valuefrom-name-explicit should include a CUSTOM_PREFIX valueFrom map
    asserts:
      - equal:
          path: envs.simple-valuefrom-name-explicit
          value:
            - name: CUSTOM_PREFIX
              valueFrom:
                secretKeyRef:
                  key: simpleValueFromKey
                  name: simpleValueFromName
                  optional: false

  - it: multi-valuefrom-map should include all valueFrom maps from .Values.multiValueFromMap
    asserts:
      - equal:
          path: envs.multi-valuefrom-map
          value:
            - name: LOGLEVEL
              valueFrom:
                configMapKeyRef:
                  key: multiValueFromMapLogLevel
                  name: debug
                  optional: true
            - name: REPLICAS
              valueFrom:
                fieldRef:
                  apiVersion: multiValueFromMapReplicasApiVersion
                  fieldPath: multiValueFromMapReplicasFieldPath
            - name: USE_CACHE
              valueFrom:
                resourceFieldRef:
                  containerName: multiValueFromMapUseCacheContainerName
                  divisor: multiValueFromMapUseCacheDivisor
                  resource: multiValueFromMapUseCacheResource

  - it: multi-valuefrom-list should include all valueFrom maps from .Values.multiValueFromList
    asserts:
      - equal:
          path: envs.multi-valuefrom-list
          value:
            - name: LOGLEVEL
              valueFrom:
                configMapKeyRef:
                  key: multiValueFromListLogLevel
                  name: debug
                  optional: true
            - name: REPLICAS
              valueFrom:
                fieldRef:
                  apiVersion: multiValueFromListReplicasApiVersion
                  fieldPath: multiValueFromListReplicasFieldPath
            - name: USE_CACHE
              valueFrom:
                resourceFieldRef:
                  containerName: multiValueFromMapUseCacheContainerName
                  divisor: multiValueFromListUseCacheDivisor
                  resource: multiValueFromListUseCacheResource

  - it: mixed-map should include all scalars and valueFrom maps from .Values.mixedMap
    asserts:
      - equal:
          path: envs.mixed-map
          value:
            - name: BOOL_VALUE
              value: "false"
            - name: LOGLEVEL
              valueFrom:
                configMapKeyRef:
                  key: mixedMapLogLevel
                  name: debug
                  optional: true
            - name: NUMBER_VALUE
              value: "42"
            - name: REPLICAS
              valueFrom:
                fieldRef:
                  apiVersion: mixedMapReplicasApiVersion
                  fieldPath: mixedMapReplicasFieldPath
            - name: STRING_VALUE
              value: "hello"
            - name: USE_CACHE
              valueFrom:
                resourceFieldRef:
                  containerName: mixedMapUseCacheContainerName
                  divisor: mixedMapUseCacheDivisor
                  resource: mixedMapUseCacheResource

  - it: mixed-list should include all scalars and valueFrom maps from .Values.mixedList
    asserts:
      - equal:
          path: envs.mixed-list
          value:
            - name: STRING_VALUE
              value: "hello"
            - name: LOGLEVEL
              valueFrom:
                configMapKeyRef:
                  key: mixedListLogLevel
                  name: debug
                  optional: true
            - name: BOOL_VALUE
              value: "false"
            - name: REPLICAS
              valueFrom:
                fieldRef:
                  apiVersion: mixedListReplicasApiVersion
                  fieldPath: mixedListReplicasFieldPath
            - name: USE_CACHE
              valueFrom:
                resourceFieldRef:
                  containerName: mixedListUseCacheContainerName
                  divisor: mixedListUseCacheDivisor
                  resource: mixedListUseCacheResource
            - name: NUMBER_VALUE
              value: "42"

  - it: edge-case-deep-sub-map should include all scalars and valueFrom maps from .Values.edgeCases.innerTargets.outer.innerMap
    asserts:
      - equal:
          path: envs.edge-case-deep-sub-map
          value:
            - name: INNER_MAP_VALID_BOOL_VALUE
              value: "false"
            - name: INNER_MAP_VALID_NUMBER_VALUE
              value: "42"
            - name: INNER_MAP_VALID_STRING_VALUE
              value: "hello"

  - it: edge-case-deep-sub-list should include all scalars and valueFrom maps from .Values.edgeCases.innerTargets.outer.innerList
    asserts:
      - equal:
          path: envs.edge-case-deep-sub-list
          value:
            - name: INNER_LIST_VALID_STRING_VALUE
              value: "hello"
            - name: INNER_LIST_VALID_BOOL_VALUE
              value: "false"
            - name: INNER_LIST_VALID_NUMBER_VALUE
              value: "42"

  - it: edge-case-ignore-subkeys-map should include only scalars and valueFrom maps from .Values.edgeCases.ignoreSubkeysMap
    asserts:
      - equal:
          path: envs.edge-case-ignore-subkeys-map
          value:
            - name: IGNORE_SUBKEYS_MAP_VALID_BOOL_VALUE
              value: "false"
            - name: IGNORE_SUBKEYS_MAP_VALID_NUMBER_VALUE
              value: "42"
            - name: IGNORE_SUBKEYS_MAP_VALID_STRING_VALUE
              value: "hello"
            - name: IGNORE_SUBKEYS_MAP_VALID_VALUE_FROM
              valueFrom:
                secretKeyRef:
                  key: validValueFromKey
                  name: validValueFromName

  - it: edge-case-ignore-subkeys-list should include only scalars and valueFrom maps from .Values.edgeCases.ignoreSubkeysList
    asserts:
      - equal:
          path: envs.edge-case-ignore-subkeys-list
          value:
            - name: IGNORE_SUBKEYS_LIST_VALID_STRING_VALUE
              value: "hello"
            - name: IGNORE_SUBKEYS_LIST_VALID_BOOL_VALUE
              value: "false"
            - name: IGNORE_SUBKEYS_LIST_VALID_NUMBER_VALUE
              value: "42"
            - name: IGNORE_SUBKEYS_LIST_VALID_VALUE_FROM
              valueFrom:
                secretKeyRef:
                  key: validValueFrom
                  name: validValueFrom

  - it: edge-case-ignore-missing-key should be empty
    asserts:
      - isEmpty:
          path: envs.edge-case-ignore-missing-key
